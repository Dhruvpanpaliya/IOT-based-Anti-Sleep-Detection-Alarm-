#include <SoftwareSerial.h>

// SIM800 TX is connected to Arduino D8
#define SIM800_TX_PIN 8

// SIM800 RX is connected to Arduino D7
#define SIM800_RX_PIN 6

// Gas sensor is connected to Arduino A0
#define GAS_SENSOR_PIN A0

// Temperature sensor is connected to Arduino A1
#define TEMP_SENSOR_PIN A1

// Flame sensor is connected to Arduino D2
#define FLAME_SENSOR_PIN 2

// Buzzer is connected to Arduino D9
#define BUZZER_PIN 9

// LDR sensor is connected to Arduino A2
#define LDR_SENSOR_PIN A2

// LED LIGHT is connected to Arduino D3
#define LED_PIN 3

// Threshold value for gas concentration
#define GAS_THRESHOLD 400

// Threshold value for temperature
#define TEMP_THRESHOLD 30

// Threshold value for light intensity
#define LDR_THRESHOLD 500

// Create software serial object to communicate with SIM800
SoftwareSerial serialSIM800(SIM800_TX_PIN, SIM800_RX_PIN);

// Function declaration
void sendSMSAlert(int gasConcentration, float temperature, int flameDetected, int lightIntensity);

void setup() {
  // Begin serial communication with Arduino and Arduino IDE (Serial Monitor)
  Serial.begin(9600);
  while (!Serial);

  // Begin serial communication with Arduino and SIM800
  serialSIM800.begin(9600);
  delay(1000);

  Serial.println("Setup Complete!");
}

void loop() {
  // Read gas concentration from sensor
  int gasConcentration = analogRead(GAS_SENSOR_PIN);

  // Read temperature from sensor
  int temperature = analogRead(TEMP_SENSOR_PIN);
  float voltage = temperature * 5.0 / 1023.0;
  float celsius = (voltage - 0.5) * 100;

  // Read flame sensor
  int flameDetected = analogRead(FLAME_SENSOR_PIN);

  // Read LDR sensor
  int lightIntensity = analogRead(LDR_SENSOR_PIN);

  // Check if gas concentration, temperature, flame, or low light intensity is detected
  if (gasConcentration > GAS_THRESHOLD || celsius > TEMP_THRESHOLD || flameDetected == HIGH || lightIntensity < LDR_THRESHOLD) {
    Serial.println("Gas, temperature, flame, or low light intensity detected!");
    Serial.print("Gas concentration: ");
    Serial.println(gasConcentration);
    Serial.print("Temperature: ");
    Serial.print(celsius);
    Serial.println("C");
    Serial.print("Flame detected: ");
    Serial.println(flameDetected);
    Serial.print("Light intensity: ");
    Serial.println(lightIntensity);

    // Turn on the buzzer
    digitalWrite(BUZZER_PIN, HIGH);

    // Send SMS alert
    sendSMSAlert(gasConcentration, celsius, flameDetected, lightIntensity);

    // Wait for 5 seconds
    delay(3000);

    // Turn off the buzzer
    digitalWrite(BUZZER_PIN, LOW);

    if (lightIntensity < LDR_THRESHOLD){
      // Turn on the LED
      digitalWrite(LED_PIN,LOW);
    }else{
      digitalWrite(LED_PIN,HIGH);
    }
  }
}

void sendSMSAlert(int gasConcentration, float temperature, int flameDetected, int lightIntensity) {
  Serial.println("Sending SMS alert...");

  // Set SMS format to ASCII
  serialSIM800.write("AT+CMGF=1\r\n");
  delay(1000);

  // Send new SMS command and phone number
  serialSIM800.write("AT+CMGS=\"+919699005642\"\r\n");
  delay(1000);

  // Send SMS content
  serialSIM800.write("Gas, temperature, flame, or low light intensity detected! Gas concentration: ");
  serialSIM800.print(gasConcentration);
  serialSIM800.write(", Temperature: ");
  serialSIM800.print(temperature);
  serialSIM800.write("C, Flame detected: ");
  serialSIM800.print(flameDetected);
  serialSIM800.write(", Light Intensity: ");
  serialSIM800.print(lightIntensity);
  serialSIM800.write("\r\n");
  delay(1000);

  // Send Ctrl+Z to denote SMS message is complete
  serialSIM800.write((char)26);
  delay(1000);

  Serial.println("SMS alert sent!");
}
